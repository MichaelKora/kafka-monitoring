---
- name: Set number of Kafka partitions to max. Replica
  set_fact:
    kafka_partitions: "{{ autoscaling_max_replicas }}"
  when: not kafka_enforce_partitions

- name: Delete old Kafka Topic
  command: >
    kubectl exec pods/cluster-zookeeper-0
    -n kafka
    --
    bin/kafka-topics.sh --delete
    --bootstrap-server cluster-kafka-bootstrap.kafka:9092
    --topic "{{ kafka_topic }}"
  changed_when: false
  register: result
  failed_when: result.rc != 0 and "does not exist" not in result.stderr

- name: Create Kafka Topic
  command: >
    kubectl exec pods/cluster-zookeeper-0
    -n kafka
    --
    bin/kafka-topics.sh --create
    --bootstrap-server cluster-kafka-bootstrap.kafka:9092
    --topic "{{ kafka_topic }}"
    --partitions "{{ kafka_partitions }}"
    --replication-factor 1
  changed_when: false

- name: Preparing Experiment
  debug:
    msg: "{{ experiment['name']}} - Duration: {{ experiment['duration'] }}h"

- name: Updating values
  set_fact:
    "{{ item.key }}": "{{ item.value }}"
  loop: "{{ experiment['values'] | dict2items }}"

- name: Render consumer settings
  template:
    src: kafka-monitoring/deployment/charts/consumerapp/values.yaml
    dest: kafka-monitoring/deployment/charts/consumerapp/values.yaml
    owner: root
    group: root
    mode: 0640

- name: Render producer settings
  template:
    src: kafka-monitoring/deployment/charts/producerapp/values.yaml
    dest: kafka-monitoring/deployment/charts/producerapp/values.yaml
    owner: root
    group: root
    mode: 0640

- name: Apply changes
  command:
    cmd: helmfile apply
    chdir: /root/kafka-monitoring/deployment
  changed_when: false

- name: Wait {{ experiment['duration'] }}h for experiment to finish
  pause:
    minutes: "{{ (experiment['duration'] * 60) | int }}"
