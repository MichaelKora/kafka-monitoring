---
- name: Create temp. file with all public keys
  shell: 'echo "root:$(cat {{ item }})" >> {{ public_keys_file }}'
  loop: "{{ lookup('fileglob', 'files/ssh/*.pub', wantlist=True) }}"
  changed_when: false
  tags:
    - ssh

- name: Uploading public SSH key into project
  command: gcloud compute project-info add-metadata --metadata-from-file=ssh-keys="{{ public_keys_file }}"
  changed_when: false
  tags:
    - ssh

- name: Delete temp. file with all public keys
  file:
    path: "{{ public_keys_file }}"
    state: absent
    force: true
  tags:
    - ssh

- name: Set Project Zone and Region
  command: >
    gcloud compute project-info add-metadata
    --metadata
    google-compute-default-region=europe-west1,google-compute-default-zone=europe-west1-b
  changed_when: false

- name: Create internal network
  command: >
    gcloud compute networks create
    kubernetes-nodes
    --subnet-mode custom
  register: result
  failed_when: result.rc != 0 and "already exists" not in result.stderr
  changed_when: false

- name: Create internal kubernetes network
  command: >
    gcloud compute networks subnets create
    kubernetes-internal
    --network kubernetes-nodes
    --range 10.240.0.0/24
    --region=europe-west1
  register: result
  failed_when: result.rc != 0 and "already exists" not in result.stderr
  changed_when: false

- name: Creating a Firewall rules for ICMP and SSH
  command: >
    gcloud compute firewall-rules create
    ssh-icmp-ingress-rule
    --direction ingress
    --source-ranges 0.0.0.0/0
    --network kubernetes-nodes
    --rules tcp:22,icmp
    --action allow
  register: result
  failed_when: result.rc != 0 and "already exists" not in result.stderr
  changed_when: false

- name: Creating a Firewall rules for Kubernetes Connection
  command: >
    gcloud compute firewall-rules create
    kubernetes-internal-rule
    --allow tcp,udp,icmp,ipip
    --network kubernetes-nodes
    --source-ranges 10.240.0.0/24
  register: result
  failed_when: result.rc != 0 and "already exists" not in result.stderr
  changed_when: false

- name: Get Project Name
  command: gcloud compute project-info describe --format="value(name)"
  register: result
  changed_when: false

- name: Parse Project Name
  set_fact:
    project_name: "{{ result.stdout }}"

- name: Creating VM
  command: >
    gcloud compute instances create "{{ item }}"
    --project="{{ project_name }}"
    --image=projects/ubuntu-os-cloud/global/images/ubuntu-2204-jammy-v20230606
    --machine-type=e2-standard-2
    --network=kubernetes-nodes
    --subnet=kubernetes-internal
    --zone=europe-west1-b
    --tags="{{ target_tags }}"
  loop: "{{ groups['virtual_machines'] }}"
  failed_when: result.rc != 0 and "already exists" not in result.stderr
  changed_when: false

- name: Resize backend disk to 100GB
  command: >
    gcloud compute disks resize "{{ item }}"
    --size=100GB
    --zone=europe-west1-b
    -q
  loop: "{{ groups['virtual_machines'] }}"
  changed_when: false
